name: Build Executables and Create Release

on:
  push:
    tags:
      - 'v*' # Trigger on version tags

jobs:
  build-executables:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        include:
          - os: macos-latest
            platform: macos
            executable-name: capgenie
            launcher-name: capgenie.sh
          - os: windows-latest
            platform: windows
            executable-name: capgenie.exe
            launcher-name: capgenie.bat

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install git

    - name: Build executable
      run: |
        if [ "${{ matrix.os }}" = "macos-latest" ]; then
          chmod +x build-executable-mac.sh
          ./build-executable-mac.sh
        else
          .\build-executable-windows-optimized.bat
        fi

    - name: Test executable
      run: |
        if [ "${{ matrix.os }}" = "macos-latest" ]; then
          echo "Testing macOS executable..."
          ./dist/capgenie --help
          ./dist/capgenie.sh --help
        else
          echo "Testing Windows executable..."
          dist\capgenie.exe --help
          dist\capgenie.bat --help
        fi

    - name: Upload executable artifacts
      uses: actions/upload-artifact@v4
      with:
        name: capgenie-${{ matrix.platform }}-executable
        path: |
          dist/${{ matrix.executable-name }}
          dist/${{ matrix.launcher-name }}
        retention-days: 30

  create-release:
    needs: build-executables
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all executables
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Download summaries
      uses: actions/download-artifact@v4
      with:
        name: macos-summary
        path: summaries

    - name: Download Windows summary
      uses: actions/download-artifact@v4
      with:
        name: windows-summary
        path: summaries

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: CapGenie Executables ${{ github.ref_name }}
        body: |
          ## CapGenie Executables ${{ github.ref_name }}
          
          ### What's New
          - Standalone executables for easy integration
          - Cross-platform compatibility (macOS and Windows)
          - Self-contained with all dependencies
          - Ready for Electron application integration
          
          ### Downloads
          Download the appropriate executable for your platform:
          
          **macOS:**
          - `capgenie-macos` - Apple Silicon/Intel compatible
          - `capgenie-macos.sh` - Launcher script
          
          **Windows:**
          - `capgenie-windows.exe` - Windows x64 executable
          - `capgenie-windows.bat` - Launcher script
          
          ### Integration
          1. Download the appropriate executable for your platform
          2. Copy to your Electron app's resources/executables/ directory
          3. Update your main.js to call the executable directly
          4. Package with your Electron application
          
          ### System Requirements
          - macOS 10.14+ (Intel or Apple Silicon)
          - Windows 10+ (x64)
          
          No additional Python installation required!
        draft: false
        prerelease: false

    - name: Upload macOS Executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/capgenie-macos-executable/capgenie
        asset_name: capgenie-macos-${{ github.ref_name }}
        asset_content_type: application/octet-stream

    - name: Upload macOS Launcher
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/capgenie-macos-executable/capgenie.sh
        asset_name: capgenie-macos-${{ github.ref_name }}.sh
        asset_content_type: text/x-shellscript

    - name: Upload Windows Executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/capgenie-windows-executable/capgenie.exe
        asset_name: capgenie-windows-${{ github.ref_name }}.exe
        asset_content_type: application/octet-stream

    - name: Upload Windows Launcher
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/capgenie-windows-executable/capgenie.bat
        asset_name: capgenie-windows-${{ github.ref_name }}.bat
        asset_content_type: application/x-msdos-program 