name: Test Installation on All Platforms

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
    paths:
      - 'setup.py'
      - 'pyproject.toml'
      - 'requirements.txt'
      - 'src/**'
      - '.github/workflows/test-installation.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'setup.py'
      - 'pyproject.toml'
      - 'requirements.txt'
      - 'src/**'
      - '.github/workflows/test-installation.yml'

jobs:
  test-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.12']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Visual Studio Build Tools
        uses: microsoft/setup-msbuild@v1.1

      - name: Set up Visual Studio Environment
        run: |
          # Set up Visual Studio environment variables
          $env:VS160COMNTOOLS = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\2019\BuildTools\Common7\Tools\"
          $env:VS140COMNTOOLS = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\2019\BuildTools\Common7\Tools\"
          
          # Add Visual Studio to PATH
          $env:PATH = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\2019\BuildTools\VC\Tools\MSVC\14.29.30133\bin\Hostx64\x64;$env:PATH"
          
          # Set compiler environment
          $env:CC = "cl.exe"
          $env:CXX = "cl.exe"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install build dependencies
        run: |
          pip install wheel setuptools pybind11
          pip install --upgrade setuptools

      - name: Run platform setup check
        run: python setup_platform.py

      - name: Test pip install -e .
        run: |
          pip install -e .
          echo "Installation successful!"

      - name: Test capgenie command
        run: |
          # Check if capgenie is in PATH
          where capgenie || echo "capgenie not found in PATH"
          
          # Try running capgenie directly
          capgenie --help || python -m capgenie --help || echo "Command execution failed"
          
          echo "Command execution test completed!"

      - name: Test import
        run: |
          python -c "import capgenie; print('Import successful!')"

      - name: Test dependencies
        run: |
          python -c "
          import pyahocorasick
          import Bio
          import plotly
          import pandas
          import inquirer
          import sklearn
          import umap
          import logomaker
          import scipy
          import numpy
          print('All dependencies imported successfully!')
          "

  test-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ['3.12']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Xcode Command Line Tools
        run: |
          xcode-select --install || true
          sudo xcodebuild -license accept

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install build dependencies
        run: |
          pip install wheel setuptools pybind11

      - name: Run platform setup check
        run: python setup_platform.py

      - name: Test pip install -e .
        run: |
          pip install -e .
          echo "Installation successful!"

      - name: Test capgenie command
        run: |
          # Check if capgenie is in PATH
          which capgenie || echo "capgenie not found in PATH"
          
          # Try running capgenie directly
          capgenie --help || python -m capgenie --help || echo "Command execution failed"
          
          echo "Command execution test completed!"

      - name: Test import
        run: |
          python -c "import capgenie; print('Import successful!')"

      - name: Test dependencies
        run: |
          python -c "
          import pyahocorasick
          import Bio
          import plotly
          import pandas
          import inquirer
          import sklearn
          import umap
          import logomaker
          import scipy
          import numpy
          print('All dependencies imported successfully!')
          "

  test-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential g++

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install build dependencies
        run: |
          pip install wheel setuptools pybind11

      - name: Run platform setup check
        run: python setup_platform.py

      - name: Test pip install -e .
        run: |
          pip install -e .
          echo "Installation successful!"

      - name: Test capgenie command
        run: |
          # Check if capgenie is in PATH
          which capgenie || echo "capgenie not found in PATH"
          
          # Try running capgenie directly
          capgenie --help || python -m capgenie --help || echo "Command execution failed"
          
          echo "Command execution test completed!"

      - name: Test import
        run: |
          python -c "import capgenie; print('Import successful!')"

      - name: Test dependencies
        run: |
          python -c "
          import pyahocorasick
          import Bio
          import plotly
          import pandas
          import inquirer
          import sklearn
          import umap
          import logomaker
          import scipy
          import numpy
          print('All dependencies imported successfully!')
          "

  test-dependencies:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential g++

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install build dependencies
        run: |
          pip install wheel setuptools pybind11

      - name: Install capgenie
        run: pip install -e .

      - name: Test all dependencies
        run: |
          python -c "
          import capgenie
          import pyahocorasick
          import Bio
          import plotly
          import pandas
          import inquirer
          print('All dependencies imported successfully!')
          "

      - name: Test basic functionality
        run: |
          python -c "
          from capgenie import filter_module, denoise, mani
          print('All C++ modules imported successfully!')
          " 